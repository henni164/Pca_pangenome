collapse(424, mode = "mixed", clade_name = "SA") %>%
collapse(421, mode = "mixed", clade_name = "SA") %>%
collapse(488, mode = "mixed", clade_name = "TW")
} else if (input$view == "3") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + collapse() + geom_tiplab()
p %>% collapse(510, mode = "mixed", clade_name = "USA") %>%
collapse(492, mode = "mixed", clade_name = "USA") %>%
collapse(424, mode = "mixed", clade_name = "SA") %>%
collapse(421, mode = "mixed", clade_name = "SA")
}
})
}
# Run the application
shinyApp(ui = ui, server = server)
ui <- fluidPage(
titlePanel("Interactive Phylogenetic Tree Viewer"),
sidebarLayout(
sidebarPanel(
radioButtons("shape","Tree shape",
choices = list("Circular" = 1, "Linear" = 2), selected = 1),
radioButtons("view","Tree view",
choices = list("Full" = 1, "USA_Sexual" = 2, "Australian" = 3), selected = 1)),
mainPanel(plotOutput("tree")
)
)
)
server <- function(input, output) {
output$tree <- renderPlot({
choices <- c("circular", "rectangular")
pca203tree <- read.tree("C:/Users/HEN294/OneDrive - CSIRO/Documents/GitHub/Pca_pangenome/Figure1/RAxML_bipartitionsBranchLabels.all_isolates_Pca203_biallelic_500")
midrooted <- midpoint_root(pca203tree)
if(input$view == "1") {
ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
} else if (input$view == "2") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p %>% collapse(492, mode = "mixed", clade_name = "USA") %>%
collapse(339, mode = "mixed", clade_name = "AUS") %>%
collapse(452, mode = "mixed", clade_name = "AUS") %>%
collapse(424, mode = "mixed", clade_name = "SA") %>%
collapse(421, mode = "mixed", clade_name = "SA") %>%
collapse(488, mode = "mixed", clade_name = "TW")
} else if (input$view == "3") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p %>% collapse(510, mode = "mixed", clade_name = "USA") %>%
collapse(492, mode = "mixed", clade_name = "USA") %>%
collapse(424, mode = "mixed", clade_name = "SA") %>%
collapse(421, mode = "mixed", clade_name = "SA")
}
})
}
# Run the application
shinyApp(ui = ui, server = server)
ui <- fluidPage(
titlePanel("Interactive Phylogenetic Tree Viewer"),
sidebarLayout(
sidebarPanel(
radioButtons("shape","Tree shape",
choices = list("Circular" = 1, "Linear" = 2), selected = 1),
radioButtons("view","Tree view",
choices = list("Full" = 1, "USA_Sexual" = 2, "Australian" = 3), selected = 1)),
mainPanel(plotOutput("tree", width = "100%")
)
)
)
server <- function(input, output) {
output$tree <- renderPlot({
choices <- c("circular", "rectangular")
pca203tree <- read.tree("C:/Users/HEN294/OneDrive - CSIRO/Documents/GitHub/Pca_pangenome/Figure1/RAxML_bipartitionsBranchLabels.all_isolates_Pca203_biallelic_500")
midrooted <- midpoint_root(pca203tree)
if(input$view == "1") {
ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
} else if (input$view == "2") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p %>% collapse(492, mode = "mixed", clade_name = "USA") %>%
collapse(339, mode = "mixed", clade_name = "AUS") %>%
collapse(452, mode = "mixed", clade_name = "AUS") %>%
collapse(424, mode = "mixed", clade_name = "SA") %>%
collapse(421, mode = "mixed", clade_name = "SA") %>%
collapse(488, mode = "mixed", clade_name = "TW")
} else if (input$view == "3") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p %>% collapse(510, mode = "mixed", clade_name = "USA") %>%
collapse(492, mode = "mixed", clade_name = "USA") %>%
collapse(424, mode = "mixed", clade_name = "SA") %>%
collapse(421, mode = "mixed", clade_name = "SA")
}
})
}
# Run the application
shinyApp(ui = ui, server = server)
ui <- fluidPage(
titlePanel("Interactive Phylogenetic Tree Viewer"),
sidebarLayout(
sidebarPanel(
radioButtons("shape","Tree shape",
choices = list("Circular" = 1, "Linear" = 2), selected = 1),
radioButtons("view","Tree view",
choices = list("Full" = 1, "USA_Sexual" = 2, "Australian" = 3), selected = 1)),
mainPanel(plotOutput("tree", width = "200%")
)
)
)
server <- function(input, output) {
output$tree <- renderPlot({
choices <- c("circular", "rectangular")
pca203tree <- read.tree("C:/Users/HEN294/OneDrive - CSIRO/Documents/GitHub/Pca_pangenome/Figure1/RAxML_bipartitionsBranchLabels.all_isolates_Pca203_biallelic_500")
midrooted <- midpoint_root(pca203tree)
if(input$view == "1") {
ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
} else if (input$view == "2") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p %>% collapse(492, mode = "mixed", clade_name = "USA") %>%
collapse(339, mode = "mixed", clade_name = "AUS") %>%
collapse(452, mode = "mixed", clade_name = "AUS") %>%
collapse(424, mode = "mixed", clade_name = "SA") %>%
collapse(421, mode = "mixed", clade_name = "SA") %>%
collapse(488, mode = "mixed", clade_name = "TW")
} else if (input$view == "3") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p %>% collapse(510, mode = "mixed", clade_name = "USA") %>%
collapse(492, mode = "mixed", clade_name = "USA") %>%
collapse(424, mode = "mixed", clade_name = "SA") %>%
collapse(421, mode = "mixed", clade_name = "SA")
}
})
}
# Run the application
shinyApp(ui = ui, server = server)
ui <- fluidPage(
titlePanel("Interactive Phylogenetic Tree Viewer"),
sidebarLayout(
sidebarPanel(
radioButtons("shape","Tree shape",
choices = list("Circular" = 1, "Linear" = 2), selected = 1),
radioButtons("view","Tree view",
choices = list("Full" = 1, "USA_Sexual" = 2, "Australian" = 3), selected = 1)),
mainPanel(plotOutput("tree", width = "100%", height = "100%")
)
)
)
server <- function(input, output) {
output$tree <- renderPlot({
choices <- c("circular", "rectangular")
pca203tree <- read.tree("C:/Users/HEN294/OneDrive - CSIRO/Documents/GitHub/Pca_pangenome/Figure1/RAxML_bipartitionsBranchLabels.all_isolates_Pca203_biallelic_500")
midrooted <- midpoint_root(pca203tree)
if(input$view == "1") {
ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
} else if (input$view == "2") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p %>% collapse(492, mode = "mixed", clade_name = "USA") %>%
collapse(339, mode = "mixed", clade_name = "AUS") %>%
collapse(452, mode = "mixed", clade_name = "AUS") %>%
collapse(424, mode = "mixed", clade_name = "SA") %>%
collapse(421, mode = "mixed", clade_name = "SA") %>%
collapse(488, mode = "mixed", clade_name = "TW")
} else if (input$view == "3") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p %>% collapse(510, mode = "mixed", clade_name = "USA") %>%
collapse(492, mode = "mixed", clade_name = "USA") %>%
collapse(424, mode = "mixed", clade_name = "SA") %>%
collapse(421, mode = "mixed", clade_name = "SA")
}
})
}
# Run the application
shinyApp(ui = ui, server = server)
server <- function(input, output) {
output$tree <- renderPlot({
choices <- c("circular", "rectangular")
pca203tree <- read.tree("C:/Users/HEN294/OneDrive - CSIRO/Documents/GitHub/Pca_pangenome/Figure1/RAxML_bipartitionsBranchLabels.all_isolates_Pca203_biallelic_500")
midrooted <- midpoint_root(pca203tree)
if(input$view == "1") {
ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
} else if (input$view == "2") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p %>% collapse(492, mode = "mixed", clade_name = "USA") %>%
collapse(339, mode = "mixed", clade_name = "AUS") %>%
collapse(452, mode = "mixed", clade_name = "AUS") %>%
collapse(424, mode = "mixed", clade_name = "SA") %>%
collapse(421, mode = "mixed", clade_name = "SA") %>%
collapse(488, mode = "mixed", clade_name = "TW")
} else if (input$view == "3") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p %>% collapse(510, mode = "mixed", clade_name = "USA") %>%
collapse(492, mode = "mixed", clade_name = "USA") %>%
collapse(424, mode = "mixed", clade_name = "SA") %>%
collapse(421, mode = "mixed", clade_name = "SA")
}
}, height = 500, width = 500)
}
# Run the application
shinyApp(ui = ui, server = server)
server <- function(input, output) {
output$tree <- renderPlot({
choices <- c("circular", "rectangular")
pca203tree <- read.tree("C:/Users/HEN294/OneDrive - CSIRO/Documents/GitHub/Pca_pangenome/Figure1/RAxML_bipartitionsBranchLabels.all_isolates_Pca203_biallelic_500")
midrooted <- midpoint_root(pca203tree)
if(input$view == "1") {
ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
} else if (input$view == "2") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p %>% collapse(492, mode = "mixed", clade_name = "USA") %>%
collapse(339, mode = "mixed", clade_name = "AUS") %>%
collapse(452, mode = "mixed", clade_name = "AUS") %>%
collapse(424, mode = "mixed", clade_name = "SA") %>%
collapse(421, mode = "mixed", clade_name = "SA") %>%
collapse(488, mode = "mixed", clade_name = "TW")
} else if (input$view == "3") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p %>% collapse(510, mode = "mixed", clade_name = "USA") %>%
collapse(492, mode = "mixed", clade_name = "USA") %>%
collapse(424, mode = "mixed", clade_name = "SA") %>%
collapse(421, mode = "mixed", clade_name = "SA")
}
}, height = 1000, width = 1000)
}
# Run the application
shinyApp(ui = ui, server = server)
ui <- fluidPage(
titlePanel("Interactive Phylogenetic Tree Viewer"),
sidebarLayout(
sidebarPanel(
radioButtons("shape","Tree shape",
choices = list("Circular" = 1, "Linear" = 2), selected = 1),
radioButtons("view","Tree view",
choices = list("Full" = 1, "USA_Sexual" = 2, "Australian" = 3), selected = 1)),
mainPanel(plotOutput("tree", width = "100%", height = "100%")
)
)
)
server <- function(input, output) {
output$tree <- renderPlot({
choices <- c("circular", "rectangular")
pca203tree <- read.tree("C:/Users/HEN294/OneDrive - CSIRO/Documents/GitHub/Pca_pangenome/Figure1/RAxML_bipartitionsBranchLabels.all_isolates_Pca203_biallelic_500")
midrooted <- midpoint_root(pca203tree)
if(input$view == "1") {
ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
} else if (input$view == "2") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p %>% collapse(492, mode = "mixed", clade_name = "USA") %>%
collapse(339, mode = "mixed", clade_name = "AUS") %>%
collapse(452, mode = "mixed", clade_name = "AUS") %>%
collapse(424, mode = "mixed", clade_name = "SA") %>%
collapse(421, mode = "mixed", clade_name = "SA") %>%
collapse(488, mode = "mixed", clade_name = "TW")
} else if (input$view == "3") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p %>% collapse(510, mode = "mixed", clade_name = "USA") %>%
collapse(492, mode = "mixed", clade_name = "USA") %>%
collapse(424, mode = "mixed", clade_name = "SA") %>%
collapse(421, mode = "mixed", clade_name = "SA")
}
}, height = 2000, width = 2000)
}
# Run the application
shinyApp(ui = ui, server = server)
ui <- fluidPage(
titlePanel("Interactive Phylogenetic Tree Viewer"),
sidebarLayout(
sidebarPanel(
radioButtons("shape","Tree shape",
choices = list("Circular" = 1, "Linear" = 2), selected = 1),
radioButtons("view","Tree view",
choices = list("Full" = 1, "USA_Sexual" = 2, "Australian" = 3), selected = 1)),
mainPanel(plotOutput("tree", width = "100%", height = "100%")
)
)
)
server <- function(input, output) {
output$tree <- renderPlot({
choices <- c("circular", "rectangular")
pca203tree <- read.tree("C:/Users/HEN294/OneDrive - CSIRO/Documents/GitHub/Pca_pangenome/Figure1/RAxML_bipartitionsBranchLabels.all_isolates_Pca203_biallelic_500")
midrooted <- midpoint_root(pca203tree)
if(input$view == "1") {
ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
} else if (input$view == "2") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p %>% collapse(492, mode = "none", clade_name = "USA") %>%
collapse(339, mode = "none", clade_name = "AUS") %>%
collapse(452, mode = "none", clade_name = "AUS") %>%
collapse(424, mode = "none", clade_name = "SA") %>%
collapse(421, mode = "none", clade_name = "SA") %>%
collapse(488, mode = "none", clade_name = "TW")
} else if (input$view == "3") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p %>% collapse(510, mode = "none", clade_name = "USA") %>%
collapse(492, mode = "none", clade_name = "USA") %>%
collapse(424, mode = "none", clade_name = "SA") %>%
collapse(421, mode = "none", clade_name = "SA")
}
}, height = 2000, width = 2000)
}
# Run the application
shinyApp(ui = ui, server = server)
ui <- fluidPage(
titlePanel("Interactive Phylogenetic Tree Viewer"),
sidebarLayout(
sidebarPanel(
radioButtons("shape","Tree shape",
choices = list("Circular" = 1, "Linear" = 2), selected = 1),
radioButtons("view","Tree view",
choices = list("Full" = 1, "USA_Sexual" = 2, "Australian" = 3), selected = 1)),
mainPanel(plotOutput("tree", width = "100%", height = "100%")
)
)
)
server <- function(input, output) {
output$tree <- renderPlot({
choices <- c("circular", "rectangular")
pca203tree <- read.tree("C:/Users/HEN294/OneDrive - CSIRO/Documents/GitHub/Pca_pangenome/Figure1/RAxML_bipartitionsBranchLabels.all_isolates_Pca203_biallelic_500")
midrooted <- midpoint_root(pca203tree)
if(input$view == "1") {
ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
} else if (input$view == "2") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p %>% collapse(492, mode = "none", clade_name = "USA") %>%
collapse(339, mode = "none", clade_name = "AUS") %>%
collapse(452, mode = "none", clade_name = "AUS") %>%
collapse(424, mode = "none", clade_name = "SA") %>%
collapse(421, mode = "none", clade_name = "SA") %>%
collapse(488, mode = "none", clade_name = "TW") + geom_tiplab()
} else if (input$view == "3") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p %>% collapse(510, mode = "none", clade_name = "USA") %>%
collapse(492, mode = "none", clade_name = "USA") %>%
collapse(424, mode = "none", clade_name = "SA") %>%
collapse(421, mode = "none", clade_name = "SA") + geom_tiplab()
}
}, height = 2000, width = 2000)
}
# Run the application
shinyApp(ui = ui, server = server)
library(tidytree)
ggtree(midrooted, layout = "circular") + geom_tiplab() + geom_text(aes(label = node), position = position_jitter(height = 0.05, width = 0.05))
groupClade(midrooted, 492)
P + groupClade(midrooted, 492)
p1 + groupClade(midrooted, 492)
groupClade(midrooted, 492)
groupClade(midrooted, c(492, 510))
tree2 <- groupClade(midrooted, c(492, 510))
ggtree(tree2, aes(color = group))
ggtree(midrooted, layout = "circular") + geom_tiplab() + geom_text(aes(label = node), position = position_jitter(height = 0.05, width = 0.05))
ggtree(midrooted, layout = "circular") + geom_tiplab() + geom_text(aes(label = node), position = position_jitter(height = 0.05, width = 0.05))
p1
p1 %>% collapse(492) + geom_text(aes(label = node), position = position_jitter(height = 0.05, width = 0.05))
p1 %>% collapse(492) %>% collapse(424) + geom_text(aes(label = node), position = position_jitter(height = 0.05, width = 0.05))
p1 %>% collapse(492) %>% collapse(424) %>% collapse(452) + geom_text(aes(label = node), position = position_jitter(height = 0.05, width = 0.05))
p1 %>% collapse(492) %>% collapse(424) %>% collapse(452) %>% collapse(339) + geom_text(aes(label = node), position = position_jitter(height = 0.05, width = 0.05))
p1 %>% collapse(492) %>% collapse(424) %>% collapse(452) %>% collapse(339) %>% collapse(421) + geom_text(aes(label = node), position = position_jitter(height = 0.05, width = 0.05))
ui <- fluidPage(
titlePanel("Interactive Phylogenetic Tree Viewer"),
sidebarLayout(
sidebarPanel(
radioButtons("shape","Tree shape",
choices = list("Circular" = 1, "Linear" = 2), selected = 1),
radioButtons("view","Tree view",
choices = list("Full" = 1, "USA_Sexual" = 2, "Australian" = 3), selected = 1)),
mainPanel(plotOutput("tree", width = "100%", height = "100%")
)
)
)
server <- function(input, output) {
output$tree <- renderPlot({
choices <- c("circular", "rectangular")
pca203tree <- read.tree("C:/Users/HEN294/OneDrive - CSIRO/Documents/GitHub/Pca_pangenome/Figure1/RAxML_bipartitionsBranchLabels.all_isolates_Pca203_biallelic_500")
midrooted <- midpoint_root(pca203tree)
if(input$view == "1") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p2 <- groupClade(p, c(492, 339, 452, 424, 421, 64, 448))
ggree(p2, aes(color = group)) + scale_color_manual(values = c("#00B7BF", "#FB0449","#FB0449","#FF8503","#FF8503","#00B7BF","#D253FF"))
} else if (input$view == "2") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p %>% collapse(492, mode = "none", clade_name = "USA") %>%
collapse(339, mode = "none", clade_name = "AUS") %>%
collapse(452, mode = "none", clade_name = "AUS") %>%
collapse(424, mode = "none", clade_name = "SA") %>%
collapse(421, mode = "none", clade_name = "SA") %>%
collapse(488, mode = "none", clade_name = "TW") + geom_tiplab()
} else if (input$view == "3") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p %>% collapse(510, mode = "none", clade_name = "USA") %>%
collapse(492, mode = "none", clade_name = "USA") %>%
collapse(424, mode = "none", clade_name = "SA") %>%
collapse(421, mode = "none", clade_name = "SA") + geom_tiplab()
}
}, height = 2000, width = 2000)
}
# Run the application
shinyApp(ui = ui, server = server)
# Define UI for application that draws a histogram
ui <- fluidPage(
titlePanel("Interactive Phylogenetic Tree Viewer"),
sidebarLayout(
sidebarPanel(
radioButtons("shape","Tree shape",
choices = list("Circular" = 1, "Linear" = 2), selected = 1),
radioButtons("view","Tree view",
choices = list("Full" = 1, "USA_Sexual" = 2, "Australian" = 3), selected = 1)),
mainPanel(plotOutput("tree", width = "100%", height = "100%")
)
)
)
server <- function(input, output) {
output$tree <- renderPlot({
choices <- c("circular", "rectangular")
pca203tree <- read.tree("C:/Users/HEN294/OneDrive - CSIRO/Documents/GitHub/Pca_pangenome/Figure1/RAxML_bipartitionsBranchLabels.all_isolates_Pca203_biallelic_500")
midrooted <- midpoint_root(pca203tree)
if(input$view == "1") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p2 <- groupClade(p, c(492, 339, 452, 424, 421, 64, 448))
ggtree(p2, aes(color = group)) + scale_color_manual(values = c("#00B7BF", "#FB0449","#FB0449","#FF8503","#FF8503","#00B7BF","#D253FF"))
} else if (input$view == "2") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p %>% collapse(492, mode = "none", clade_name = "USA") %>%
collapse(339, mode = "none", clade_name = "AUS") %>%
collapse(452, mode = "none", clade_name = "AUS") %>%
collapse(424, mode = "none", clade_name = "SA") %>%
collapse(421, mode = "none", clade_name = "SA") %>%
collapse(488, mode = "none", clade_name = "TW") + geom_tiplab()
} else if (input$view == "3") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p %>% collapse(510, mode = "none", clade_name = "USA") %>%
collapse(492, mode = "none", clade_name = "USA") %>%
collapse(424, mode = "none", clade_name = "SA") %>%
collapse(421, mode = "none", clade_name = "SA") + geom_tiplab()
}
}, height = 2000, width = 2000)
}
# Run the application
shinyApp(ui = ui, server = server)
ggtree(tree2, aes(color = group)) + scale_color_manual(values = c("red","green","blue"))
ui <- fluidPage(
titlePanel("Interactive Phylogenetic Tree Viewer"),
sidebarLayout(
sidebarPanel(
radioButtons("shape","Tree shape",
choices = list("Circular" = 1, "Linear" = 2), selected = 1),
radioButtons("view","Tree view",
choices = list("Full" = 1, "USA_Sexual" = 2, "Australian" = 3), selected = 1)),
mainPanel(plotOutput("tree", width = "100%", height = "100%")
)
)
)
server <- function(input, output) {
output$tree <- renderPlot({
choices <- c("circular", "rectangular")
pca203tree <- read.tree("C:/Users/HEN294/OneDrive - CSIRO/Documents/GitHub/Pca_pangenome/Figure1/RAxML_bipartitionsBranchLabels.all_isolates_Pca203_biallelic_500")
midrooted <- midpoint_root(pca203tree)
if(input$view == "1") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p2 <- groupClade(p, c(492, 339, 452, 424, 421, 64, 448))
ggtree(p2, aes(color = group)) + scale_color_manual(values = c("#00B7BF", "#FB0449","#FB0449","#FF8503","#FF8503","#00B7BF","#D253FF"))
} else if (input$view == "2") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p %>% collapse(492, mode = "none", clade_name = "USA") %>%
collapse(339, mode = "none", clade_name = "AUS") %>%
collapse(452, mode = "none", clade_name = "AUS") %>%
collapse(424, mode = "none", clade_name = "SA") %>%
collapse(421, mode = "none", clade_name = "SA") %>%
collapse(488, mode = "none", clade_name = "TW") + geom_tiplab()
} else if (input$view == "3") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p %>% collapse(510, mode = "none", clade_name = "USA") %>%
collapse(492, mode = "none", clade_name = "USA") %>%
collapse(424, mode = "none", clade_name = "SA") %>%
collapse(421, mode = "none", clade_name = "SA") + geom_tiplab()
}
}, height = 2000, width = 2000)
}
# Run the application
shinyApp(ui = ui, server = server)
traceback()
ui <- fluidPage(
titlePanel("Interactive Phylogenetic Tree Viewer"),
sidebarLayout(
sidebarPanel(
radioButtons("shape","Tree shape",
choices = list("Circular" = 1, "Linear" = 2), selected = 1),
radioButtons("view","Tree view",
choices = list("Full" = 1, "USA_Sexual" = 2, "Australian" = 3), selected = 1)),
mainPanel(plotOutput("tree", width = "100%", height = "100%")
)
)
)
server <- function(input, output) {
output$tree <- renderPlot({
choices <- c("circular", "rectangular")
pca203tree <- read.tree("C:/Users/HEN294/OneDrive - CSIRO/Documents/GitHub/Pca_pangenome/Figure1/RAxML_bipartitionsBranchLabels.all_isolates_Pca203_biallelic_500")
midrooted <- midpoint_root(pca203tree)
if(input$view == "1") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)])
p2 <- groupClade(p, c(492, 339, 452, 424, 421, 64, 448))
ggtree(p2, aes(color = group)) + scale_color_manual(values = c("#00B7BF","#FB0449","#FB0449","#FF8503","#FF8503","#00B7BF","#D253FF")) + geom_tiplab()
} else if (input$view == "2") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p %>% collapse(492, mode = "none", clade_name = "USA") %>%
collapse(339, mode = "none", clade_name = "AUS") %>%
collapse(452, mode = "none", clade_name = "AUS") %>%
collapse(424, mode = "none", clade_name = "SA") %>%
collapse(421, mode = "none", clade_name = "SA") %>%
collapse(488, mode = "none", clade_name = "TW") + geom_tiplab()
} else if (input$view == "3") {
p <- ggtree(midrooted, layout = choices[as.numeric(input$shape)]) + geom_tiplab()
p %>% collapse(510, mode = "none", clade_name = "USA") %>%
collapse(492, mode = "none", clade_name = "USA") %>%
collapse(424, mode = "none", clade_name = "SA") %>%
collapse(421, mode = "none", clade_name = "SA") + geom_tiplab()
}
}, height = 2000, width = 2000)
}
# Run the application
shinyApp(ui = ui, server = server)
